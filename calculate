import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: Main(),
  ));
}
class Main extends StatefulWidget {
  const Main({super.key});

  @override
  State<Main> createState() => _MainState();
}

class _MainState extends State<Main> {
  //-----------------------------------
  // 변수 설정
  int? x ; // 피연산자1
  int? y ;// 피연산자2
  String? oper ; //연산자
  dynamic result; // 결과값

  //숫자버튼을 눌렀을 경우
  void inputNum(int input) {
    print('inputNum : $input');
    if( x == null ){
      setState(() {
        x = input;
      });
      return;
    }
    // 계속해서 x 값을 증가시키는 값
    if(oper==null){
      setState(() {
        x = int.parse(x.toString() + input.toString());
      });
      return;
    }
    //x , y , oper null 아닐경우 y값 채우기
    if (y == null) {
      setState(() {
        y= input;
      });
      return;
    }
    if(y !=null) {
      setState(() {
        y = int.parse(y.toString() + input.toString());
      });
      return;
    }
  }
  // 연산버튼을 눌렀을 경우
  void inputOper(String input) {
    print('inputOper--------------');
    print('inputOper : $input');
    setState(() {
      oper = input;
    });
  }

// 함수 설정
  String printAppBarTitle() {
    print('x : $x');
    print('y : $y');
    print('oper : $oper');
    print('result : $result');

    //계산 종료
    if(result != null) {
      return result.toString();
    }
    //result = null이다 계산 식
    if(y != null) {
      return x.toString() + oper! +y.toString();
    }
    //result =null 이고 y = null
    if(oper !=null) {
      return x.toString() + oper!;
    }

    if(x != null) {
      return x.toString();
    }
    //시작점
    return'0'; // 계산기 결과값
  }

  //C버튼을 눌렀을 경우
  void ClearNumber() {
    setState(() { //콜백 리빌드 진행
      x = null;
      y=null;
      oper=null;
      result=null;
    });
  }

  //= 버튼을 눌렀을때
  void calculate(){
    print('calculate 함수 실행');
    print('x : $x');
    print('y : $y');
    print('oper : $oper');
    print('result : $result');
    if(x == null || oper == null || y == null) {
      print('계산식 중입니다.');
      return;
    }
    if(oper == '+'){
      setState(() {
        result = x! + y!;
      });
      return;
    }
    if(oper == '-'){
      setState(() {
        result = x! - y!;
      });
      return;
    }
    if(oper == 'x'){
      setState(() {
        result = x! * y!;
      });
      return;
    }
    if(oper == '÷'){
      setState(() {
        result = x! / y!;
      });
      return;
    }
  }
//--------------------------------------


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      drawer: Drawer(
        child: ListView(
          children: [
            UserAccountsDrawerHeader(
                accountName: Text('홍길동'),
                accountEmail: Text('test@test.com'))
          ],
        ),
      ),
      appBar: AppBar(
        title: Align(
          alignment: Alignment.bottomRight, //오른쪽 정렬
          child: Text(
            printAppBarTitle(), // printAppBarTitle() 반환값
            style: TextStyle(
              color: Colors.white
            ),
          ),
        ),
        backgroundColor: Colors.black,
      ),
      body: Column(
        children: [
          Row(
            children: [
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(7);
                    },
                    child: Text('7')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(8);
                    },
                    child: Text('8')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(9);
                    },
                    child: Text('9')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputOper('÷');
                    },
                    child: Text('÷')
                ),
              ),
            ],
          ),
          Row(
            children: [
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(4);
                    },
                    child: Text('4')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(5);
                    },
                    child: Text('5')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(6);
                    },
                    child: Text('6')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputOper('x');
                    },
                    child: Text('x')
                ),
              ),
            ],
          ),
          Row(
            children: [
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(1);
                    },
                    child: Text('1')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(2);
                    },
                    child: Text('2')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(3);
                    },
                    child: Text('3')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputOper('-');
                    },
                    child: Text('-')
                ),
              ),
            ],
          ),
          Row(
            children: [
              Expanded(
                child: TextButton(
                    onPressed: () {
                      ClearNumber(); //setState() 실행 된다 전부 초기화 작업
                    },
                    child: Text('C')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputNum(0);
                    },
                    child: Text('0')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      inputOper('+');
                    },
                    child: Text('+')
                ),
              ),
              Expanded(
                child: TextButton(
                    onPressed: () {
                      calculate();
                    },
                    child: Text('=')
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

